version: 2.1
jobs:
  build:
    docker: &shared_docker
      - image: cimg/node:14.10.1 # the primary container, where your job's commands are run
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD # context / project UI env-var reference
    steps:
      - checkout # check out the code in the project directory
      - restore_cache:
          keys:
            - npm-v1-dependencies-{{ checksum "yarn.lock" }}
      - run: yarn global add node-gyp && yarn install
  lint:
    docker: *shared_docker
    steps:
      - checkout # check out the code in the project directory
      - restore_cache:
          keys:
            - npm-v1-dependencies-{{ checksum "yarn.lock" }}
      - run: yarn global add node-gyp && yarn install && yarn lint && yarn format:check
  test:
    docker: *shared_docker
    steps:
      - checkout # check out the code in the project directory
      - restore_cache:
          keys:
            - npm-v1-dependencies-{{ checksum "yarn.lock" }}
      - run: yarn global add node-gyp && yarn install && yarn test:ci

  bddPostgres:
    docker:
      - image: cimg/node:12.18.4
        environment:
          DATABASE_URL: postgres://psqluser:password@localhost:5432/psdb
          JWT_SECRET: some string
          API_HOST: localhost
          API_PROTOCOL: http
          API_PORT: 3000
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: psqluser
          POSTGRES_DB: psdb
          POSTGRES_PASSWORD: password
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-v6-dependencies-{{ checksum "yarn.lock" }}
      - run: yarn test:e2e
  documentation:
    docker: *config
    steps:
      - checkout
      - run: yarn buld:dock

workflows:
  version: 2
  build_test:
    jobs:
      - build
      - lint
      - test
      # - e2e_test
